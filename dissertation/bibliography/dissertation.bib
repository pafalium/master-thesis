
@inproceedings{sorensen2005impromptu,
author = {Sorensen, Andrew},
booktitle = {Proceedings of the Australasian Computer Music Conference},
number = {July},
pages = {2--4},
title = {{Impromptu: An interactive programming environment for composition and performance}},
year = {2009}
}

@article{sorensen2010programming,
  title={Programming with time: cyber-physical programming with impromptu},
  author={Sorensen, Andrew and Gardner, Henry},
  journal={ACM Sigplan Notices},
  volume={45},
  number={10},
  pages={822--834},
  year={2010},
  publisher={ACM}
}

@inproceedings{hickey2008clojure,
  title={The clojure programming language},
  author={Hickey, Rich},
  booktitle={Proceedings of the 2008 symposium on Dynamic languages},
  pages={1},
  year={2008},
  organization={ACM}
}

@article{10.1109/MIC.2011.148,
author = {Mark McGranaghan},
title = {ClojureScript: Functional Programming for JavaScript Platforms},
journal ={IEEE Internet Computing},
volume = {15},
number = {6},
issn = {1089-7801},
year = {2011},
pages = {97-102},
doi = {http://doi.ieeecomputersociety.org/10.1109/MIC.2011.148},
publisher = {IEEE Computer Society},
address = {Los Alamitos, CA, USA},
}

@book{reas2007processing,
abstract = {It has been more than twenty years since desktop publishing reinvented design, and it's clear that there is a growing need for designers and artists to learn programming skills to fill the widening gap between their ideas and the capability of their purchased software. This book is an introduction to the concepts of computer programming within the context of the visual arts. It offers a comprehensive reference and text for Processing (www.processing.org), an open-source programming language that can be used by students, artists, designers, architects, researchers, and anyone who wants to program images, animation, and interactivity.Processing have been tested in classrooms, workshops, and arts institutions, including UCLA, Carnegie Mellon, New York University, and Harvard University. Tutorial units make up the bulk of the book and introduce the syntax and concepts of software (including variables, functions, and object-oriented programming), cover such topics as photography and drawing in relation to software, and feature many short, prototypical example programs with related images and explanations. More advanced professional projects from such domains as animation, performance, and typography are discussed in interviews with their creators. "Extensions" present concise introductions to further areas of investigation, including computer vision, sound, and electronics. Appendixes, references to other material, and a glossary contain additional technical details. Processing can be used by reading each unit in order, or by following each category from the beginning of the book to the end. The Processing software and all of the code presented can be downloaded and run for future exploration.With essays by:<br Alexander R. Galloway, Golan Levin, R. Luke DuBois, Simon Greenwold, Francis Li, and Hernando Barrag\'{a}n and interviews with Jared Tarbell, Martin Wattenberg, James Paterson, Erik van Blockland, Ed Burton, Josh On, J\"{u}rg Lehni, Auriea Harvey and Micha\"{e}l Samyn, Mathew Cullen and Grady Hall, Bob Sabiston, Jennifer Steinkamp, Ruth Jarman and Joseph Gerhardt, Sue Costabile, Chris Csikszentmih\'{a}lyi, Golan Levin and Zachary Lieberman, and Mark Hansen.},
author = {Reas, Casey and Fry, Ben},
booktitle = {Processing},
doi = {10.1523/JNEUROSCI.2525-09.2009},
isbn = {9780262182621},
issn = {15292401},
number = {2},
pages = {736},
pmid = {20016109},
publisher = {Mit Press},
title = {{Processing: A Programming Handbook for Visual Designers and Artists}},
url = {http://www.amazon.com/dp/0262182629},
volume = {54},
year = {2007}
}

@article{de2012modern,
author = {{de Oliveira Lopes}, Jos\'{e} Antonio Branquinho},
title = {{Modern Programming for Generative Design Extended Abstract}},
year = {2012}
}

@article{lopes2011portable,
	title={Portable generative design for CAD applications},
	author={Lopes, Jos{\'e} and Leit{\~a}o, Ant{\'o}nio},
	year={2011}
}

@incollection{aish2012designscript,
  title={DesignScript: origins, explanation, illustration},
  author={Aish, Robert},
  booktitle={Computational Design Modelling},
  pages={1--8},
  year={2012},
  publisher={Springer}
}

@article{PER-GRA:2007,
  Author    = {P\'erez, Fernando and Granger, Brian E.},
  Title     = {{IP}ython: a System for Interactive Scientific Computing},
  Journal   = {Computing in Science and Engineering},
  Volume    = {9},
  Number    = {3},
  Pages     = {21--29},
  month     = may,
  year      = 2007,
  url       = "http://ipython.org",
  ISSN      = "1521-9615",
  doi       = {10.1109/MCSE.2007.53},
  publisher = {IEEE Computer Society},
}

@misc{openjscad2015site,
	author = "RenÃ© K. Muller",
	title = "OpenJSCAD.org",
	year = "2015",
	howpublished = "retrieved from \url{http://openjscad.org/}",
	note = "[Online; accessed 20-November-2015]"
}

@inproceedings{houston2013clara,
	title={Clara. io: full-featured 3D content creation for the web and cloud era},
	author={Houston, Ben and Larsen, Wayne and Larsen, Bryan and Caron, Jack and Nikfetrat, Nima and Leung, Catherine and Silver, Jesse and Kamal-Al-Deen, Hasan and Callaghan, Peter and Chen, Roy and others},
	booktitle={ACM SIGGRAPH 2013 Studio Talks},
	pages={8},
	year={2013},
	organization={ACM}
}

@misc{lighttable2015site,
	author = "Chris Granger",
	title = "Lighttable",
	year = "2015",
	howpublished = "retrieved from \url{http://lighttable.com/}",
	note = "[Online; accessed 25-November-2015]"
}

@misc{kintel2011openscad,
	title={OpenSCAD, The Programmers Solid 3D CAD Modeller},
	author={Marius Kintel},
	howpublished = "retrieved from \url{http://www.openscad.org/}",
	note = "[Online; accessed 25-November-2015]",
	year={2015}
}

@article{tilkov2010node,
	title={Node. js: Using JavaScript to build high-performance network programs},
	author={Tilkov, Stefan and Vinoski, Steve},
	journal={IEEE Internet Computing},
	number={6},
	pages={80--83},
	year={2010},
	publisher={IEEE}
}

@article{victor2012learnable,
abstract = {Programming is a way of thinking, not a rote skill. Learning about "for" loops is not learning to program, any more than learning about pencils is learning to draw.$\backslash$n    People understand what they can see. If a programmer cannot see what a program is doing, she can't understand it.$\backslash$n$\backslash$nThus, the goals of a programming system should be:$\backslash$n$\backslash$n    to support and encourage powerful ways of thinking$\backslash$n    to enable programmers to see and understand the execution of their programs},
author = {Victor, Bret},
journal = {Worrydream. com},
title = {{Learnable Programming}},
url = {http://worrydream.com/LearnableProgramming/},
year = {2012}
}
